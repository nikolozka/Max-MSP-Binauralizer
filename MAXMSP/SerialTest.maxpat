#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#N vpatcher 210 483 810 883;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P message 412 142 92 196617 frgb 255 255 255;
#P message 326 141 56 196617 frgb 0 0 0;
#P window linecount 0;
#P message 26 138 141 196617 clear \, paintoval \$1 \$2 \$3 \$4;
#P window linecount 1;
#P newex 424 95 53 196617 sel 255 0;
#P newex 93 78 31 196617 + 10;
#P newex 31 77 31 196617 + 10;
#P window linecount 0;
#P newex 20 102 66 196617 pack 0 0 0 0;
#P outlet 28 348 15 0;
#P inlet 423 60 15 0;
#P inlet 121 39 15 0;
#P inlet 18 46 15 0;
#P connect 0 0 4 0;
#P connect 4 0 8 0;
#P connect 10 0 3 0;
#P connect 9 0 3 0;
#P connect 8 0 3 0;
#P connect 0 0 5 0;
#P connect 5 0 4 1;
#P connect 1 0 4 2;
#P connect 6 0 4 3;
#P connect 1 0 6 0;
#P connect 7 0 9 0;
#P connect 7 1 10 0;
#P connect 2 0 7 0;
#P pop;
#P newobj 240 663 97 196617 p "draw the circle";
#P user lcd 231 787 128 128 1 1 0 0 0;
#P number 326 573 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;
#P number 280 577 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;
#P number 230 576 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;
#P newex 261 528 67 196617 unpack 0 0 0;
#P newex 226 475 35 196617 t 65 l;
#P newex 226 443 55 196617 zl group 3;
#P newex 226 412 47 196617 gate 1 0;
#P message 323 404 20 196617 65;
#P newex 321 375 32 196617 sel 1;
#P newex 368 377 27 196617 !- 1;
#P toggle 368 336 15 0;
#P newex 368 298 38 196617 sel 65;
#P newex 368 267 47 196617 gate 1 1;
#P newex 314 261 27 196617 0;
#P window linecount 12;
#P comment 511 484 100 196617 trigger (or [t]) forces right-left conventions. All the drawing and processing will happen before Max requests new values. When this trigger fires \, it sends an ASCII A to ask Arduino for new values.;
#P window linecount 2;
#P comment 395 170 100 196617 Click here to get a list of serial ports;
#P window linecount 6;
#P comment 431 270 100 196617 checks for the ascii value of "A" to begin cominucation. After initial communication is made \, this block shuts down.;
#P window linecount 1;
#P newex 218 200 71 196617 serial a 9600;
#P message 299 163 33 196617 close;
#P message 314 138 37 196617 port a;
#P message 355 171 32 196617 print;
#P newex 299 79 41 196617 sel 0 1;
#P newex 218 80 57 196617 qmetro 10;
#P window linecount 3;
#P comment 122 82 100 196617 Read serial input buffer every 10 milliseconds;
#P toggle 218 49 15 0;
#P window linecount 29;
#P comment 17 33 100 196617 Serial Call-Response Sends a byte out the serial port \, and reads 3 bytes in. Sets foregound color \, xpos \, and ypos of a circle using the values returned from the serial port. Note: This patch assumes that the device on the other end of the serial port is going to send a single byte of value 65 (ASCII A) on startup. The sketch waits for that byte \, then sends an ASCII A whenever it wants more data. created 14 Apr 2009 by Scott Fitzgerald and Tom Igoe;
#P window linecount 1;
#P comment 237 46 100 196617 click to start;
#P connect 26 0 28 2;
#P connect 25 0 28 1;
#P connect 24 0 28 0;
#P connect 28 0 27 0;
#P connect 23 0 24 0;
#P connect 23 1 25 0;
#P connect 23 2 26 0;
#P connect 22 1 23 0;
#P fasten 22 0 9 0 231 513 172 513 181 171 223 171;
#P connect 21 0 22 0;
#P connect 20 0 21 0;
#P connect 16 0 20 0;
#P connect 16 0 18 0;
#P connect 16 0 17 0;
#P connect 9 0 20 1;
#P connect 9 0 14 1;
#P connect 19 0 9 0;
#P connect 18 0 19 0;
#P connect 13 0 16 0;
#P connect 5 0 8 0;
#P connect 5 0 13 0;
#P fasten 17 0 14 0 373 411 416 411 416 250 373 250;
#P connect 14 0 15 0;
#P connect 15 0 16 0;
#P connect 2 0 4 0;
#P connect 2 0 5 0;
#P connect 6 0 9 0;
#P connect 7 0 9 0;
#P connect 8 0 9 0;
#P connect 4 0 9 0;
#P connect 5 1 7 0;
#P window clipboard copycount 29;